[tool:pytest]
minversion = 7.0
addopts = -ra -q --strict-markers --strict-config --tb=short
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto

# Test markers for categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for complete workflows
    performance: Performance and scalability tests
    regulatory: Regulatory compliance tests (RBI Basel III)
    security: Security and authentication tests
    slow: Tests that take a long time to run
    
    # SMA specific markers
    sma: SMA calculation engine tests
    business_indicator: Business Indicator calculation tests
    bic: Business Indicator Component calculation tests
    loss_component: Loss Component calculation tests
    ilm: Internal Loss Multiplier calculation tests
    
    # Test categories from comprehensive test plan
    sma_u_001: SMA-U-001 - Happy Path BI calculation
    sma_u_002: SMA-U-002 - Edge Case zero components
    sma_u_003: SMA-U-003 - Edge Case entire year zero BI
    sma_u_004: SMA-U-004 - Negative Case RBI Max/Min/Abs operations
    sma_u_005: SMA-U-005 - Data Validation missing data
    sma_u_006: SMA-U-006 - Happy Path Bucket 1
    sma_u_007: SMA-U-007 - Happy Path Bucket 2
    sma_u_008: SMA-U-008 - Happy Path Bucket 3
    sma_u_009: SMA-U-009 - Boundary Lower Bucket 1/2 threshold
    sma_u_010: SMA-U-010 - Boundary Upper Bucket 2/3 threshold
    sma_u_011: SMA-U-011 - Boundary Near Lower Bucket 2
    sma_u_012: SMA-U-012 - Boundary Near Upper Bucket 2
    sma_u_013: SMA-U-013 - Edge Case zero BI
    sma_u_014: SMA-U-014 - Negative Case negative BI
    sma_u_015: SMA-U-015 - Happy Path LC 10 years data
    sma_u_016: SMA-U-016 - Edge Case zero losses
    sma_u_017: SMA-U-017 - Edge Case configurable horizon
    sma_u_018: SMA-U-018 - ILM Gate Bucket 1
    sma_u_019: SMA-U-019 - ILM Gate insufficient data
    sma_u_020: SMA-U-020 - Happy Path ILM calculated
    sma_u_021: SMA-U-021 - Complex Case national discretion
    sma_u_022: SMA-U-022 - Complex Case supervisor override
    
    # Performance test markers
    perf_p_001: PERF-P-001 - Quarter-end full run
    perf_p_002: PERF-P-002 - Concurrent ad-hoc requests
    perf_p_003: PERF-P-003 - Auto-async threshold
    perf_p_004: PERF-P-004 - Memory usage large dataset

# Filtering options
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:faker.*

# Coverage configuration
[coverage:run]
source = src
branch = true
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    
precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml