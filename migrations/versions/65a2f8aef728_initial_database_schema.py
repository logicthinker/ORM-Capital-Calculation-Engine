"""Initial database schema

Revision ID: 65a2f8aef728
Revises: 
Create Date: 2025-08-29 01:18:52.885301

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '65a2f8aef728'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_trail',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('operation', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('operation_type', sa.String(), nullable=False),
    sa.Column('input_data_hash', sa.String(), nullable=False),
    sa.Column('output_data_hash', sa.String(), nullable=True),
    sa.Column('parameter_versions', sa.Text(), nullable=True),
    sa.Column('model_versions', sa.Text(), nullable=True),
    sa.Column('data_sources', sa.Text(), nullable=True),
    sa.Column('environment_hash', sa.String(), nullable=False),
    sa.Column('reproducible', sa.Boolean(), nullable=True),
    sa.Column('additional_metadata', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_trail_entity_id'), 'audit_trail', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_trail_run_id'), 'audit_trail', ['run_id'], unique=False)
    op.create_index(op.f('ix_audit_trail_timestamp'), 'audit_trail', ['timestamp'], unique=False)
    op.create_table('business_indicators',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('calculation_date', sa.Date(), nullable=False),
    sa.Column('period', sa.String(), nullable=False),
    sa.Column('ildc', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('sc', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('fc', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('bi_total', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('three_year_average', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('methodology', sa.Enum('SMA', 'BIA', 'TSA', 'AMA', name='calculationmethodology'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_business_indicators_calculation_date'), 'business_indicators', ['calculation_date'], unique=False)
    op.create_index(op.f('ix_business_indicators_entity_id'), 'business_indicators', ['entity_id'], unique=False)
    op.create_table('loss_events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('business_line', sa.String(), nullable=False),
    sa.Column('occurrence_date', sa.Date(), nullable=False),
    sa.Column('discovery_date', sa.Date(), nullable=False),
    sa.Column('accounting_date', sa.Date(), nullable=False),
    sa.Column('gross_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('net_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('is_outsourced', sa.Boolean(), nullable=True),
    sa.Column('is_pending', sa.Boolean(), nullable=True),
    sa.Column('is_timing_loss', sa.Boolean(), nullable=True),
    sa.Column('is_excluded', sa.Boolean(), nullable=True),
    sa.Column('exclusion_reason', sa.Text(), nullable=True),
    sa.Column('rbi_approval_reference', sa.String(), nullable=True),
    sa.Column('disclosure_required', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_loss_events_accounting_date'), 'loss_events', ['accounting_date'], unique=False)
    op.create_index(op.f('ix_loss_events_entity_id'), 'loss_events', ['entity_id'], unique=False)
    op.create_index(op.f('ix_loss_events_occurrence_date'), 'loss_events', ['occurrence_date'], unique=False)
    op.create_table('capital_calculations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('calculation_date', sa.Date(), nullable=False),
    sa.Column('methodology', sa.Enum('SMA', 'BIA', 'TSA', 'AMA', name='calculationmethodology'), nullable=False),
    sa.Column('business_indicator_component', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('loss_component', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('internal_loss_multiplier', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('operational_risk_capital', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('risk_weighted_assets', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('sma_bucket', sa.Integer(), nullable=True),
    sa.Column('ilm_gated', sa.Boolean(), nullable=True),
    sa.Column('ilm_gate_reason', sa.String(), nullable=True),
    sa.Column('parameter_version_id', sa.String(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('business_indicator_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['business_indicator_id'], ['business_indicators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_capital_calculations_calculation_date'), 'capital_calculations', ['calculation_date'], unique=False)
    op.create_index(op.f('ix_capital_calculations_entity_id'), 'capital_calculations', ['entity_id'], unique=False)
    op.create_index(op.f('ix_capital_calculations_run_id'), 'capital_calculations', ['run_id'], unique=True)
    op.create_table('recoveries',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('loss_event_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('receipt_date', sa.Date(), nullable=False),
    sa.Column('recovery_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['loss_event_id'], ['loss_events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('run_id', sa.String(), nullable=False),
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('QUEUED', 'RUNNING', 'COMPLETED', 'FAILED', name='jobstatus'), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('methodology', sa.Enum('SMA', 'BIA', 'TSA', 'AMA', name='calculationmethodology'), nullable=False),
    sa.Column('execution_mode', sa.String(), nullable=False),
    sa.Column('queued_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('estimated_completion', sa.DateTime(), nullable=True),
    sa.Column('progress_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('current_step', sa.String(), nullable=True),
    sa.Column('result_data', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_code', sa.String(), nullable=True),
    sa.Column('callback_url', sa.String(), nullable=True),
    sa.Column('webhook_delivered', sa.Boolean(), nullable=True),
    sa.Column('webhook_delivery_attempts', sa.Integer(), nullable=True),
    sa.Column('idempotency_key', sa.String(), nullable=True),
    sa.Column('correlation_id', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('calculation_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_id'], ['capital_calculations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_correlation_id'), 'jobs', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_jobs_idempotency_key'), 'jobs', ['idempotency_key'], unique=False)
    op.create_index(op.f('ix_jobs_run_id'), 'jobs', ['run_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jobs_run_id'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_idempotency_key'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_correlation_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_table('recoveries')
    op.drop_index(op.f('ix_capital_calculations_run_id'), table_name='capital_calculations')
    op.drop_index(op.f('ix_capital_calculations_entity_id'), table_name='capital_calculations')
    op.drop_index(op.f('ix_capital_calculations_calculation_date'), table_name='capital_calculations')
    op.drop_table('capital_calculations')
    op.drop_index(op.f('ix_loss_events_occurrence_date'), table_name='loss_events')
    op.drop_index(op.f('ix_loss_events_entity_id'), table_name='loss_events')
    op.drop_index(op.f('ix_loss_events_accounting_date'), table_name='loss_events')
    op.drop_table('loss_events')
    op.drop_index(op.f('ix_business_indicators_entity_id'), table_name='business_indicators')
    op.drop_index(op.f('ix_business_indicators_calculation_date'), table_name='business_indicators')
    op.drop_table('business_indicators')
    op.drop_index(op.f('ix_audit_trail_timestamp'), table_name='audit_trail')
    op.drop_index(op.f('ix_audit_trail_run_id'), table_name='audit_trail')
    op.drop_index(op.f('ix_audit_trail_entity_id'), table_name='audit_trail')
    op.drop_table('audit_trail')
    # ### end Alembic commands ###
